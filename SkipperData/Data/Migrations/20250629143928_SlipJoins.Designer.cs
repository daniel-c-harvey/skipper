// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SkipperData.Data;

#nullable disable

namespace SkipperData.Data.Migrations
{
    [DbContext(typeof(SkipperContext))]
    [Migration("20250629143928_SlipJoins")]
    partial class SlipJoins
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("skipper")
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SkipperModels.Entities.RentalAgreement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("PriceRate")
                        .HasColumnType("integer");

                    b.Property<string>("PriceUnit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("SlipId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("VesselId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("SlipId");

                    b.HasIndex("Status");

                    b.HasIndex("VesselId");

                    b.ToTable("rental_agreements", "skipper");
                });

            modelBuilder.Entity("SkipperModels.Entities.Slip", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("LocationCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<long>("SlipClassificationId")
                        .HasColumnType("bigint");

                    b.Property<string>("SlipNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("SlipClassificationId");

                    b.HasIndex("SlipNumber")
                        .IsUnique();

                    b.HasIndex("Status");

                    b.ToTable("slips", "skipper");
                });

            modelBuilder.Entity("SkipperModels.Entities.SlipClassification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("BasePrice")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<decimal>("MaxBeam")
                        .HasPrecision(19, 5)
                        .HasColumnType("numeric(19,5)");

                    b.Property<decimal>("MaxLength")
                        .HasPrecision(19, 5)
                        .HasColumnType("numeric(19,5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BasePrice");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Name");

                    b.ToTable("slip_classifications", "skipper");
                });

            modelBuilder.Entity("SkipperModels.Entities.Vessel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Beam")
                        .HasPrecision(19, 5)
                        .HasColumnType("numeric(19,5)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<decimal>("Length")
                        .HasPrecision(19, 5)
                        .HasColumnType("numeric(19,5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("VesselType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Name");

                    b.HasIndex("RegistrationNumber")
                        .IsUnique();

                    b.HasIndex("VesselType");

                    b.ToTable("vessels", "skipper");
                });

            modelBuilder.Entity("SkipperModels.Entities.RentalAgreement", b =>
                {
                    b.HasOne("SkipperModels.Entities.Slip", "Slip")
                        .WithMany()
                        .HasForeignKey("SlipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SkipperModels.Entities.Vessel", "Vessel")
                        .WithMany()
                        .HasForeignKey("VesselId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Slip");

                    b.Navigation("Vessel");
                });

            modelBuilder.Entity("SkipperModels.Entities.Slip", b =>
                {
                    b.HasOne("SkipperModels.Entities.SlipClassification", "SlipClassification")
                        .WithMany("Slips")
                        .HasForeignKey("SlipClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SlipClassification");
                });

            modelBuilder.Entity("SkipperModels.Entities.SlipClassification", b =>
                {
                    b.Navigation("Slips");
                });
#pragma warning restore 612, 618
        }
    }
}
