@using NetBlocks.Models
@using Models.Shared.Models
@using Models.Shared.InputModels
@using Models.Shared.Converters
@using Web.Shared.Result

@typeparam T where T : class, IInputModel, new()
@typeparam TModel where TModel : class, IModel, new()
@typeparam TEditModal where TEditModal : IEditModal<T>
@typeparam TViewModel where TViewModel : IModelPageViewModel<TModel>
@typeparam TConverter where TConverter : IModelToInputConverter<TModel, T>

<MudText Typo="Typo.h4">@Title</MudText>

<MudStack Row Breakpoint="@Breakpoint.Xs" Spacing="3" Class="py-5">
    <MudTextField Adornment="Adornment.Start"
                  AdornmentIcon="@Icons.Material.Filled.Search"
                  Placeholder="@Placeholder"
                  Clearable="true"
                  @bind-Value="SearchTerm"
                  DebounceInterval="300"
                  OnDebounceIntervalElapsed="OnSearchChanged" />
    <MudButton Color="Color.Primary" EndIcon="@Icons.Material.Outlined.AddCircleOutline" Variant="Variant.Filled" OnClick="@NewEntity">
        New @ModelDisplayName
    </MudButton>
</MudStack>

@if (ViewModel.ErrorResults != null)
{
    <ResultDetails TResult="Result"
                   Result="ViewModel.ErrorResults"/>  
}
else
{
    <MudDataGrid @ref="Grid"
                 T="T"
                 ServerData="LoadGridServerData"
                 CurrentPage="@(Page.GetValueOrDefault(1) - 1)"
                 RowsPerPage="@(PageSize.GetValueOrDefault(10))">
        <Columns>
            @* Data Columns *@
            @Columns

            @* Action Content *@
            <TemplateColumn CellClass="align-items-end">
                <CellTemplate>
                    <MudStack Row AlignItems="AlignItems.Center">
                        @if (EditAction is null)
                        {
                            <MudIconButton Size="@Size.Small" Color="Color.Secondary" Icon="@Icons.Material.Outlined.Edit" OnClick="@(async () => await EditItem(context.Item))"/>
                        }
                        else
                        {
                            @EditAction(context.Item)
                        }
                        @if (DeleteAction is null)
                        {
                            <MudIconButton Size="@Size.Small" Color="Color.Error" Icon="@Icons.Material.Outlined.Delete" OnClick="@(async () => await DeleteItem(context.Item))"/>
                        }
                        else
                        {
                            @DeleteAction(context.Item)
                        }
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
        <PagerContent>
            <MudDataGridPager T="T" 
                              PageSizeOptions="@(new[] { 5, 10, 15, 25, 50})" 
                              RowsPerPageString="@($"{ModelDisplayName}s per page")"
                              InfoFormat="{first_item}-{last_item} of {all_items}"/>
        </PagerContent>
    </MudDataGrid>
}