@using System.Globalization
@using AuthBlocksModels.InputModels

@if (Model is not null)
{
    <MudGrid Spacing="3">
        <MudItem xs="12" sm="9">
            <MudTextField Label="Email" 
                          @bind-Value="@Model.Email"
                          For="() => Model.Email"
                          Variant="Variant.Outlined"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Email"
                          AdornmentColor="Color.Primary" 
                          Disabled="true"/>
        </MudItem>
        <MudItem xs="12" sm="3">
            <MudCheckBox Label="Registered"
                         @bind-Value="Model.IsConsumed"
                         For="() => Model.IsConsumed"
                         Color="Color.Primary"/>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudStack>
                <MudDatePicker Label="Registration Date"
                               @bind-Date="Model.ConsumedAtDate"
                               For="() => Model.ConsumedAtDate"
                               Disabled="!Model.IsConsumed"/>
                <MudTimePicker Label="Registration Time"
                               @bind-Time="Model.ConsumedAtTime"
                               For="() => Model.ConsumedAtTime"
                               Disabled="!Model.IsConsumed"/>
            </MudStack>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudStack>
                <MudDatePicker Label="Expiry Date"
                               @bind-Date="Model.ExpiresAtDate"
                               For="() => Model.ExpiresAtDate"/>
                <MudTimePicker Label="Expiry Time"
                               @bind-Time="Model.ExpiresAtTime"
                               For="() => Model.ExpiresAtTime"/>
            </MudStack>
        </MudItem>
    </MudGrid>
}

@code {

    [Parameter] public PendingRegistrationInputModel? Model { get; set; }

}