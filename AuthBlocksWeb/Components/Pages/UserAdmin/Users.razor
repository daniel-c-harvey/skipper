@using AuthBlocksWeb.ApiClients
@using AuthBlocksModels.Entities.Identity
@using AuthBlocksModels.InputModels
@using AuthBlocksModels.Models
@using Web.Shared.Maintenance.Entities

@attribute [HierarchicalRoleAuthorize(SystemRoleConstants.UserAdmin)]
@page "/useradmin/users"

<ModelView @ref="_modelView"
           T="UserInputModel"
           TModel="UserModel"
           TEntity="ApplicationUser"
           TViewModel="UsersViewModel"
           TEditModal="UserEditModal"
           ModelDisplayName="User"
           Placeholder="Search users..."
           PageRoute="useradmin/users"
           Title="Users">
    <Columns>
        <PropertyColumn Property="x => x.UserName" Title="Name"/>
        <PropertyColumn Property="x => x.Email" Title="Email"/>
        <PropertyColumn Property="x => x.PhoneNumber" Title="Phone #"/>
        <PropertyColumn Property="x => x.AccessFailedCount" Title="Access Fails"/>
        <PropertyColumn Property="x => x.TwoFactorEnabled" Title="Two Factor"/>
        <TemplateColumn>
            <CellTemplate Context="cell">
                <MudButton Variant="Variant.Text"
                           Color="Color.Tertiary"
                           OnClick="@(() => ResetPassword(cell.Item))">
                    Reset Password
                </MudButton>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
    <DeleteAction Context="item">
        <MudButton Color="Color.Error" Variant="Variant.Outlined" OnClick="@(() => _modelView.DeleteItem(item))">Revoke</MudButton>
    </DeleteAction>
</ModelView>

@code {
    private ModelView<UserInputModel, UserModel, ApplicationUser, UserEditModal, UsersViewModel> _modelView;

    private async Task ResetPassword(UserInputModel? item)
    {
        // todo integrate with email for secure reset
    }

}