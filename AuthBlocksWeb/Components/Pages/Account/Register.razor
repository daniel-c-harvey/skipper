@page "/account/register"
@using AuthBlocksModels.ApiModels
@using AuthBlocksWeb.HierarchicalAuthorize
@using AuthBlocksWeb.Services
@inject JwtAuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation

<PageTitle>Register</PageTitle>

<MudText Typo="Typo.h6">Create a new account.</MudText>

<StatusMessage Message="@Message" />
<EditForm Model="Input" OnValidSubmit="RegisterUser" FormName="register">
    <DataAnnotationsValidator />
    <MudGrid Class="my-5" Spacing="3">
        <MudItem xs="12" md="6">
            <MudTextField Label="Username"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Person"
                          AdornmentColor="Color.Primary"
                          Placeholder="Enter your username"
                          Variant="Variant.Outlined"
                          @bind-Value="Input.UserName"
                          For="() => Input.UserName"/>
        </MudItem>
        <MudItem xs="12" md="6">
            <MudTextField Label="Email"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Email"
                          AdornmentColor="Color.Primary"
                          Placeholder="Enter your email"
                          Variant="Variant.Outlined"
                          @bind-Value="Input.Email"
                          For="() => Input.Email"/>
        </MudItem>
        <MudItem xs="12" md="6">
            <MudTextField Label="Password"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Lock"
                          AdornmentColor="Color.Primary"
                          Placeholder="Enter your password"
                          Variant="Variant.Outlined"
                          InputType="InputType.Password"
                          @bind-Value="Input.Password"
                          For="() => Input.Password"/>
        </MudItem>
        <MudItem xs="12" md="6">
            <MudTextField Label="Confirm Password"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Lock"
                          AdornmentColor="@((Input.Password.Equals(Input.ConfirmPassword)) ? Color.Success : Color.Error)"
                          Placeholder="Confirm your password"
                          Variant="Variant.Outlined"
                          InputType="InputType.Password"
                          @bind-Value="Input.ConfirmPassword"
                          For="() => Input.ConfirmPassword"/>
        </MudItem>
        <MudItem xs="12" Class="d-flex justify-start py-5">
            <MudStack Spacing="4">
                <MudButton StartIcon="@((isLoading) ? Icons.Material.Filled.Refresh : null)"
                           Disabled="isLoading"
                           Color="Color.Primary"
                           Variant="Variant.Filled"
                           ButtonType="ButtonType.Submit">
                    @(isLoading ? "Creating account..." : "Register")
                </MudButton>
                <MudButton Href="/account/login"
                           Color="Color.Secondary"
                           Variant="Variant.Outlined">
                    Log into an existing account 
                </MudButton>
            </MudStack>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    private string? Message = "";
    private bool isLoading;

    [SupplyParameterFromForm]
    private RegisterRequest Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    public async Task RegisterUser()
    {
        isLoading = true;
        Message = "";
        StateHasChanged();

        try
        {
            var success = await AuthStateProvider.RegisterAsync(Input);
            
            if (success)
            {
                Navigation.NavigateTo(ReturnUrl ?? "/");
            }
            else
            {
                Message = "Registration failed. Please check your input and try again.";
            }
        }
        catch (Exception ex)
        {
            Message = "An error occurred during registration. Please try again.";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
}